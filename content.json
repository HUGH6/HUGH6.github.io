{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"[1] ES6 let与const用法总结","text":"本文主要记录ES6与久规范下相比的不同之处。相比与ES5，ES6新增了let命令和const命令来声明变量与常量，以此来代替原本的var命令，依次避免var所带来的弊端。 1、let命令es6新增了let命令，用于声明变量，声明的变量只在let命令所在的代码块内有效。 不存在变量提升 暂时性死区 只要块级作用域内存在let命令，它所声明的变量就“绑定”这个区域，不再受外部的影响。 不允许重复声明 2、块级作用域es5只用全局作用作用域和函数作用域，没有块级作用域，这带来了很多不合理的场景。 3、const命令基本用法 const声明一个只读的常量，一旦声明，常量的值就不能改变。同时也意味着，const一旦声明变量，就必须立即初始化，不能等到以后赋值。 const的作用域与let相同，也不提升，同样存在暂时性死区。 本质 const实际保证的并不是变量的值不能改动，而是变量指向的那个内存地址的数据不得改动。 4、顶层对象的属性顶层对象 在浏览器环境指window对象，在node环境指global对象，顶层对象的属性与全局变量是等价的。 从es6开始，全局变量将逐步与顶层对象的属性脱钩。","link":"/2019/10/23/1-ES6-let%E4%B8%8Econst%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/10/23/hello-world/"}],"tags":[{"name":"ES6","slug":"ES6","link":"/tags/ES6/"}],"categories":[{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"ES6","slug":"前端/ES6","link":"/categories/%E5%89%8D%E7%AB%AF/ES6/"}]}